[
["index.html", "Getting and Cleaning Data Title Page", " Getting and Cleaning Data Sean Kross 2017-08-17 Title Page Cover Image: The Crossing Sweeper by Seymour Joseph Guy "],
["introduction.html", "Introduction", " Introduction Our world is awash with data. This book will explore ways of thinking about data and technologies that implement these ideas for importing, manuplulating, and structuring data. This book focuses on tools in the R programming language, and it is assumed that you’re already familiar with the basics of R. If you’re new to R I highly suggest getting started with R Programming for Data Science by Roger Peng or with Swirl for a more interactive approach. If you’re interested in a thorough treatment of advanced topics in R programming I recommend Mastering Software Development in R by Roger Peng, Brooke Anderson, and me. "],
["philosophies-of-data.html", "Chapter 1 Philosophies of Data 1.1 What are Data 1.2 Data Frames and Tibbles 1.3 Tidy Data 1.4 Matrix Data 1.5 Hierarchical Data", " Chapter 1 Philosophies of Data 1.1 What are Data Data are observations about the world. In order to make sense of and give context to these observations we organize data into structures. 1.2 Data Frames and Tibbles R is an object oriented programming language, and there are several varieties of R objects you can use to represent data. In this book we will concentrate mostly on how to use data frames as the central object for thinking about data. Data frames are rectangular data objects, meaning that they are composed of rows and columns, much like the layout of a piece of graph paper or a spreadsheet. In the next few chapters we’ll discuss how you can import data into R from many different sources, but you can also create data frames with code alone. There’s no better tool for creating your own data frames from scratch than the tibble package. Install the package with install.packages(&quot;tibble&quot;), and then we can start creating our own data frames. Let’s start up the package and then create a simple data frame, where every column is specified with a simple vector: library(tibble) people &lt;- data_frame(Name = c(&quot;Shannon&quot;, &quot;Jeff&quot;, &quot;Sean&quot;, &quot;Roger&quot;), Department = c(&quot;Genetics&quot;, &quot;Biostatistics&quot;, &quot;Cognitive Science&quot;, &quot;Biostatistics&quot;), School = c(&quot;JHU&quot;, &quot;JHU&quot;, &quot;UCSD&quot;, &quot;Monash&quot;)) people ## # A tibble: 4 x 3 ## Name Department School ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Shannon Genetics JHU ## 2 Jeff Biostatistics JHU ## 3 Sean Cognitive Science UCSD ## 4 Roger Biostatistics Monash Let’s take a look at what is printed when we enter our table of people in the R console. The first line, # A tibble: 4 x 3, shows that the object being printed is a tibble. A tibble is a data frame with some nice extra properties which we’ll discuss later. The second line, Name Department School, shows the column names for the tibble. The third line, &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;, shows the type of data in each column. After the third line, each line shows one row in the dataset, starting with a row number. We can add rows and columns using the add_row() and add_column() functions respectively. The add_row() function takes an argument for each column in the tibble while the add_column() function takes an argument for each row in the tibble. people &lt;- add_row(people, Name = &quot;Brian&quot;, Department = &quot;Biostatistics&quot;, School = &quot;JHU&quot;) people ## # A tibble: 5 x 3 ## Name Department School ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Shannon Genetics JHU ## 2 Jeff Biostatistics JHU ## 3 Sean Cognitive Science UCSD ## 4 Roger Biostatistics Monash ## 5 Brian Biostatistics JHU people &lt;- add_column(people, Puppet = c(FALSE, TRUE, FALSE, TRUE, TRUE)) people ## # A tibble: 5 x 4 ## Name Department School Puppet ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;lgl&gt; ## 1 Shannon Genetics JHU FALSE ## 2 Jeff Biostatistics JHU TRUE ## 3 Sean Cognitive Science UCSD FALSE ## 4 Roger Biostatistics Monash TRUE ## 5 Brian Biostatistics JHU TRUE 1.3 Tidy Data 1.4 Matrix Data 1.5 Hierarchical Data "],
["data-from-files.html", "Chapter 2 Data from Files 2.1 Tabular Data 2.2 Text 2.3 Images", " Chapter 2 Data from Files 2.1 Tabular Data readr readxl 2.2 Text 2.3 Images "],
["data-from-the-web.html", "Chapter 3 Data from the Web 3.1 Files 3.2 APIs 3.3 Web Scraping", " Chapter 3 Data from the Web 3.1 Files downloadr 3.2 APIs xml2 jsonlite httr 3.3 Web Scraping rvest "],
["applied-tidying.html", "Chapter 4 Applied Tidying 4.1 Text Manipulation 4.2 Dates &amp; Times 4.3 Data Rectangling 4.4 Databases", " Chapter 4 Applied Tidying 4.1 Text Manipulation 4.1.1 Regular Expressions stringr glue 4.2 Dates &amp; Times lubridate hms 4.3 Data Rectangling magrittr dplyr tidyr 4.4 Databases "]
]
